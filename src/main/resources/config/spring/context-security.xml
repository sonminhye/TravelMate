<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:security="http://www.springframework.org/schema/security"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
                        http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
                        http://www.springframework.org/schema/security
                        http://www.springframework.org/schema/security/spring-security-3.2.xsd">
 
    <security:http auto-config="true" use-expressions="true">
		<security:anonymous username="guest" granted-authority="ROLE_GUEST" />
             
 		<security:form-login 
 			login-page="/signIn"
 			default-target-url="/main"
 			authentication-failure-url="/signIn?fail=true"
 		/>	
 		
	 	<!-- 중복 로그인 방지 -->
	 	<security:session-management invalid-session-url="/signIn">
	 		<security:concurrency-control max-sessions="1" error-if-maximum-exceeded="true" expired-url="/signIn"/>
		</security:session-management> 
 		
 		<!-- 커스터마이징 필터 적용 -->
 		<security:custom-filter before="FILTER_SECURITY_INTERCEPTOR" ref="filterSecurityInterceptor"/>
 		
 		<!-- 접근 권한이 없을 때 -->
 		<security:access-denied-handler error-page="/accessDenied" />
    </security:http>
 	
          
    <security:authentication-manager>
        <security:authentication-provider user-service-ref="customJdbcDaoImpl">
       		 <security:password-encoder ref="bcryptPasswordEncoder"/>
		</security:authentication-provider>
    </security:authentication-manager>
    
    
    <!-- 로그인 DB연동 -->
    <bean id="customJdbcDaoImpl" class="com.travel.mate.security.CustomJdbcDaoImpl">
    	<property name="dataSource" ref="dataSource"/>
    	<property name="rolePrefix" value=""/>
    	<property name="usersByUsernameQuery" value="SELECT userCode, id, password, enabled FROM user WHERE id=?"/>
    	<property name="authoritiesByUsernameQuery" value="SELECT userCode, authority FROM userAuthority WHERE userCode=(SELECT userCode FROM user WHERE id=?) "/>
    	<property name="enableAuthorities" value="true"/>
    	<property name="enableGroups" value="false"/>
    </bean>
    
    <!-- 패스워드 암호화 -->
    <bean id="bcryptPasswordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" />
    
    
    
    <!-- 인증정보 (authenticationManager), 
                     판단주체 (accessDecisionManager),
                     대상정보 (securityMetadataSource)-->
    <bean id="filterSecurityInterceptor" class="org.springframework.security.web.access.intercept.FilterSecurityInterceptor">
     	<property name="authenticationManager" ref="org.springframework.security.authenticationManager"/>
	   	<property name="accessDecisionManager" ref="accessDecisionManager" />
    	<property name="securityMetadataSource" ref="reloadableFilterInvocationSecurityMetadataSource" />
    </bean>
    
    
    <bean id="accessDecisionManager" class="org.springframework.security.access.vote.AffirmativeBased">
    	<constructor-arg>
    		<list>
    			<bean class="org.springframework.security.access.vote.RoleVoter">
    				<property name="rolePrefix" value="" />
    			</bean>
    		</list>
    	</constructor-arg>
    	<property name="allowIfAllAbstainDecisions" value="false" />
    </bean>
    
    <bean id="securedObjectDao" class="com.travel.mate.security.service.SecuredObjectDao">
		<property name="dataSource" ref="dataSource"/>    	
		<property name="sqlRolesAndUrl" value="
		    	SELECT   A.resourcePattern AS URL, B.authority AS AUTHORITY
				FROM     securedResource A, securedResourceAuthority B
				WHERE    A.resourceCode = B.resourceCode
				ORDER BY A.sortOrder
    	" />
    </bean>
    
    <bean id="securedObjectService" class="com.travel.mate.security.service.SecuredObjectServiceImpl">
    	<property name="secureObjectDao" ref="securedObjectDao" />
    </bean>
    
    <bean id="requestMap" class="com.travel.mate.security.service.UrlResourcesMapFactoryBean" init-method="init">
    	<property name="securedObjectService" ref="securedObjectService" />
    </bean>
    
    <bean id="reloadableFilterInvocationSecurityMetadataSource" class="com.travel.mate.security.service.ReloadableFilterInvocationSecurityMetadataSource">
    	<constructor-arg ref="requestMap" />
    	<property name="securedObjectService" ref="securedObjectService" />
    </bean>

</beans>


