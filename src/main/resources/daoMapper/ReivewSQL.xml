<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="review">

	<insert id="insertTravelEval" parameterType="com.travel.mate.dto.TravelEvalDTO">
		<![CDATA[
			INSERT INTO
				travelEval (applyCode, point)
			VALUES (#{applyCode}, #{point})
		]]>
	</insert>


	<insert id="insertReview" parameterType="com.travel.mate.dto.ReviewDTO">
		<![CDATA[
			INSERT INTO
				review (applyCode, content, writeTime)
			VALUES (#{applyCode}, #{content}, now())
		]]>
	</insert>
	
	<!-- 해당 게시물에 작성된 리뷰 출력 -->
	<select id="selectReviewAll" parameterType="com.travel.mate.dto.ApplyDTO" resultType="hashmap">
		<![CDATA[
			SELECT		ud.name, r.content, r.writeTime
			FROM		userDetail ud, review r, apply a
			WHERE		a.applyCode = r.applycode
				AND		a.userCode = ud.userCode
				AND		a.travelCode = #{travelCode}
			ORDER BY	r.reviewCode ASC
		]]>
	</select>
	
	<!-- 로그인한 사람이 해당 게시물에 리뷰 작성했는지 여부, 작성했다면 결과 반환 -->
	<select id="selectReviewWrite" parameterType="com.travel.mate.dto.ApplyDTO" resultType="hashmap">
		<![CDATA[
			SELECT	a.travelCode, a.userCode
			FROM	apply a, review r
			WHERE	a.applyCode = r.applyCode
				AND	a.travelCode = #{travelCode}
				AND	a.userCode = #{userCode}
		]]>
	</select>
	
	<!-- 지금 보고 있는 게시물을 로그인한 사람이 신청했었다면 리뷰창을 보이게 하도록 하기 위함, 신청했다면 결과 반환 -->
	<select id="selectReviewWriteCheck" parameterType="com.travel.mate.dto.ApplyDTO" resultType="hashmap">
		<![CDATA[
			SELECT	t.travelCode, a.userCode
			FROM	travel t, travelDetail td, apply a
			WHERE	t.travelCode = td.travelCode
				AND t.travelCode = a.travelCode
				AND	td.endDate < now()
				AND t.userCode != a.userCode
				AND	t.travelCode = #{travelCode}
				AND a.userCode = #{userCode}
		]]>
	</select>
	
	<!-- For userDetail meanPoint update -->
	<!-- 여행글을 쓴 사람의 유저코드 -->
	<select id="selectUserCode" parameterType="int" resultType="int">
		<![CDATA[
			SELECT	t.userCode
			FROM	travel t, apply a
			WHERE	a.travelCode = t.travelCode
				AND	a.applyCode = #{applyCode}
		]]>
	</select>
	
	<!-- 유저코드를 이용해서 작성했던 여행들의 각 평점을 가져옴 -->
	<select id="selectAvgPoint" parameterType="int" resultType="hashmap">
		<![CDATA[
			SELECT		t.travelCode, COUNT(*) AS people, AVG(te.point) AS avgPoint
			FROM		travel t, travelEval te, apply a
			WHERE		t.travelCode = a.travelCode
				AND		a.applyCode = te.applyCode
				AND		t.userCode = #{userCode}
			GROUP BY	t.travelCode
		]]>
	</select>
	
	<!-- 유저코드를 이용해서 작성했던 여행들에 리뷰를 남긴 총인원을 가져옴 -->
	<select id="selectCountAllPeople" parameterType="int" resultType="int">
		<![CDATA[
			SELECT	COUNT(*)
			FROM	travel t, apply a, travelEval te
			WHERE	t.travelCode = a.travelCode
				AND	a.applyCode = te.applyCode
				AND	t.userCode = #{userCode}
		]]>
	</select>
	
</mapper>